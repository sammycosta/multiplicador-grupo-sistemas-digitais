# Reading C:/altera/13.0sp1/modelsim_ase/tcl/vsim/pref.tcl 
# do bo_run_msim_gate_vhdl.do 
# if {[file exists gate_work]} {
# 	vdel -lib gate_work -all
# }
# vlib gate_work
# vmap work gate_work
# Copying C:\altera\13.0sp1\modelsim_ase\win32aloem/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# ** Warning: Copied C:\altera\13.0sp1\modelsim_ase\win32aloem/../modelsim.ini to modelsim.ini.
#          Updated modelsim.ini.
# 
# vcom -93 -work work {bo.vho}
# Model Technology ModelSim ALTERA vcom 10.1d Compiler 2012.11 Nov  2 2012
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Loading package VITAL_Timing
# -- Loading package VITAL_Primitives
# -- Loading package cycloneii_atom_pack
# -- Loading package cycloneii_components
# -- Compiling entity bo
# -- Compiling architecture structure of bo
# 
vsim work.bo
# vsim work.bo 
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.vital_timing(body)
# Loading ieee.vital_primitives(body)
# Loading cycloneii.cycloneii_atom_pack(body)
# Loading cycloneii.cycloneii_components
# Loading work.bo(structure)
# Loading cycloneii.cycloneii_lcell_comb(vital_lcell_comb)
# Loading ieee.std_logic_arith(body)
# Loading cycloneii.cycloneii_io(structure)
# Loading cycloneii.cycloneii_mux21(altvital)
# Loading cycloneii.cycloneii_dffe(behave)
# Loading cycloneii.cycloneii_asynch_io(behave)
# Loading cycloneii.cycloneii_clkctrl(vital_clkctrl)
# Loading cycloneii.cycloneii_ena_reg(behave)
# Loading cycloneii.cycloneii_lcell_ff(vital_lcell_ff)
# Loading cycloneii.cycloneii_and1(altvital)
# ** Warning: Design size of 2 instances exceeds ModelSim ALTERA recommended capacity.
# This may because you are loading cell libraries which are not recommended with
# the ModelSim Altera version. Expect performance to be adversely affected.
add wave -position end  sim:/bo/Az
add wave -position end  sim:/bo/Bz
add wave -position end  sim:/bo/ovf
add wave -position 0  sim:/bo/op
add wave -position end  sim:/bo/mult
add wave -position 1  sim:/bo/mB
add wave -position 5  sim:/bo/entA
add wave -position 6  sim:/bo/entB
add wave -position end  sim:/bo/cmult
add wave -position end  sim:/bo/clk
add wave -position end  sim:/bo/cEnt
do estimulosbo.do
run 160ns
add wave -position end  sim:/bo/\regB|q\
restart
do estimulosbo.do
run 160ns
add wave -position end  sim:/bo/ww_mult
add wave -position end  sim:/bo/\quantosZero|posicao\
restart
do estimulosbo.do
run 160ns
restart
do estimulosbo.do
run 160ns
